{"version":3,"file":"static/js/250.929689bb.chunk.js","mappings":"gLACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAyG,0BAAzG,EAA6I,yBAA7I,EAA+K,wB,SCW/K,EARgB,SAACA,GACb,OAAO,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMG,W,UCI7C,EANe,SAACH,GACZ,OAAO,SAAC,KAAD,CAASI,GAAI,GAAKJ,EAAMK,GAAIJ,UAAWC,EAAvC,UACH,yBAAMF,EAAMM,U,gDCkCdC,GAAgBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,UAAhBD,EAPL,SAACR,GACd,OAAO,kBAAMU,SAAUV,EAAMW,aAAtB,WACJ,SAACC,EAAA,EAAD,CAAON,KAAM,WAAaO,SAAU,CAACC,EAAAA,GAASC,EAAAA,EAAAA,GAAkB,KAAMC,YAAa,gBAAiBC,UAAWC,EAAAA,KAC9G,2CASR,EAjCgB,SAAClB,GAGb,IAAImB,EAAiBnB,EAAMoB,YAAYC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAASnB,QAASmB,EAAEnB,aAChEoB,EAAiBvB,EAAMwB,YAAYH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAQnB,KAAMmB,EAAEnB,KAAMD,GAAIoB,EAAEpB,QAK5E,OACI,iBAAKJ,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKqB,KAEL,iBAAKtB,UAAWC,EAAhB,UACKiB,GACD,SAACZ,EAAD,CAAiBG,SAXd,SAACgB,GAEZ1B,EAAM2B,QAAQD,EAASE,oB,oBC4B/B,GANuBC,E,QAAAA,IACnBC,EAAAA,GACAC,EAAAA,EAAAA,KAXkB,SAACC,GACnB,MAAO,CACHC,gBAAiBD,EAAME,YAAYD,gBACnCb,YAAaY,EAAME,YAAYd,YAC/BI,YAAaQ,EAAME,YAAYV,eAOV,CAACG,QAAAA,EAAAA,IAFPE,CAGrBM","sources":["webpack://react-kabzda-2/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialog/Dialog.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__uYjpY\",\"dialogItems\":\"Dialogs_dialogItems__sx877\",\"messages\":\"Dialogs_messages__kyBnu\",\"message\":\"Dialogs_message__3zLmw\",\"dialog\":\"Dialogs_dialog__0SpsP\"};","import s from './../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Message\r\n","import s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return <NavLink to={'' + props.id} className={s.dialog}>\r\n        <div>{props.name}</div>\r\n    </NavLink>\r\n}\r\n\r\nexport default Dialog\r\n","import s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/Textarea\";\r\nimport {maxCurrentSymbols, required} from \"../Validate/Validate\";\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let MessageElement = props.MessageData.map(m => <Message message={m.message}/>)\r\n    let DialogsElement = props.DialogsData.map(d => <Dialog name={d.name} id={d.id}/>)\r\n    const onSubmit=(formData)=>{\r\n        //console.log(formData)\r\n        props.addPost(formData.textarea)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {DialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {MessageElement}\r\n                <DialogReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst dialogForm=(props)=>{\r\n    return <form onSubmit={props.handleSubmit} >\r\n       <Field name={'textarea'}  validate={[required,maxCurrentSymbols(20)]} placeholder={\"Write message\"} component={Textarea}/>\r\n        <button>Send</button>\r\n    </form>\r\n}\r\n\r\nconst DialogReduxForm=reduxForm({form:'dialog'})(dialogForm)\r\n\r\n\r\n\r\n\r\nexport default Dialogs\r\n","\r\nimport {addPost} from \"../Redux/dialogReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\n/*import StoreContext from \"../../StoreContext\";*/\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../Login/WithAuth\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n/*const DialogsContainer = () => {\r\n\r\n    return <StoreContext.Consumer>{\r\n        (store) => {\r\n            let state = store.getState()\r\n\r\n            let addPost = () => {\r\n                store.dispatch(sendMessageCreator())\r\n\r\n            }\r\n\r\n            let changeMessage = (body) => {\r\n                store.dispatch(updateMessageCreator(body))\r\n            }\r\n            return <Dialogs addPost={addPost} changeMessage={changeMessage}\r\n                            newMessagesBody={state.DialogsPage.newMessagesBody}\r\n                            MessageData={state.DialogsPage.MessageData} DialogsData={state.DialogsPage.DialogsData}/>\r\n        }}\r\n    </StoreContext.Consumer>\r\n\r\n\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessagesBody: state.DialogsPage.newMessagesBody,\r\n        MessageData: state.DialogsPage.MessageData,\r\n        DialogsData: state.DialogsPage.DialogsData,\r\n\r\n    }\r\n}\r\n\r\nconst DialogsContainer=compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {addPost})\r\n)(Dialogs)\r\n\r\n\r\nexport default DialogsContainer\r\n"],"names":["props","className","s","message","to","id","name","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","maxCurrentSymbols","placeholder","component","Textarea","MessageElement","MessageData","map","m","DialogsElement","DialogsData","d","formData","addPost","textarea","compose","withAuthRedirect","connect","state","newMessagesBody","DialogsPage","Dialogs"],"sourceRoot":""}